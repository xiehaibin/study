int main(void)
{
	int a[2][5] = 
	{
		{1,2,3,4,5},
		{6,7,8,9,10}
	};

	cout<< a[0][9] <<endl;        // 10
	cout<< a[2][-1] <<endl;       // 10 因为二维是按一维来存的而且地址是连续的 *(*(a+2)+(-1))
	cout<< *(*(a+2)+(-1)) <<endl; // 是上面 编绎后的形式

	int r[5] = {1,2,3,4,5};
	cout<< 4[r] <<endl;           // 相当于 r+4  
	cout<< *(4+r) <<endl;         // 编绎后都将变成 *(4+r)
}